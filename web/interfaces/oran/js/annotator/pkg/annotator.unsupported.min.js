(function() {
  var __hasProp = Object.prototype.hasOwnProperty, __extends = function(child, parent) {
    for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; }
    function ctor() { this.constructor = child; }
    ctor.prototype = parent.prototype;
    child.prototype = new ctor;
    child.__super__ = parent.prototype;
    return child;
  }, __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };
  Annotator.Plugin.Unsupported = (function() {
    __extends(Unsupported, Annotator.Plugin);
    function Unsupported() {
      Unsupported.__super__.constructor.apply(this, arguments);
    }
    Unsupported.prototype.options = {
      message: "Sorry your current browser does not support the Annotator"
    };
    Unsupported.prototype.pluginInit = function() {
      if (!Annotator.supported()) {
        return $(__bind(function() {
          Annotator.showNotification(this.options.message);
          if ((window.XMLHttpRequest === void 0) && (ActiveXObject !== void 0)) {
            return $('html').addClass('ie6');
          }
        }, this));
      }
    };
    return Unsupported;
  })();
}).call(this);
