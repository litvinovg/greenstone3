#### properties file for Greenstone3 building using ANT. See the README for more 
#### information

## Tomcat installation
# Set this to the internet/intranet name of the machine that Tomcat is/will be 
# run on. localhost is fine for accessing the server from the local machine, 
# but not remotely
tomcat.server=localhost
# The port number that tomcat is/will be run on
tomcat.port=8080
# Tomcat's shutdown port - this may need to be changed if you are running two or more Tomcats
tomcat.shutdown.port=8005
# If tomcat is already running, enter the path to the base directory here
tomcat.installed.path=
# uncomment the following if you have moved the greenstone3 web directory to tomcats webapps dir 
#web.home=${tomcat.installed.path}/webapps/greenstone3

## Collection building options
# uncomment if you don't want to have collection building enabled
#disable.collection.building=true
#
# uncomment (and edit) if you want to control where perl is found
#perl.path=/usr/bin

## Greenstone 3 server program options
# does running the server automatically start up Tomcat and a browser
server.auto.start=false
# if set to true, won't try other ports if the specified port is not available
server.keep.port=false
# default servlet to start with
server.default.servlet=/library

##Browser setup
browser.path=

## Proxy setup - Greenstone installation will attempt to download extra packages. Set the proxy information here if you are behind a firewall.
# The proxy server name 
proxy.host=
# The proxy server port
proxy.port=
# A user name to use when talking to the proxy server (optional, will prompt if not entered here)
proxy.user=
# A password to use when talking to the proxy server (optional, will prompt if not entered here)
proxy.password=

## java compilation properties - for javac
# Should compilation include the debug option?
compile.debug=true
# Should compilation include the deprecation option?
compile.deprecation=true
# Should compilation include the optimize option?
compile.optimize=true

# Control whether or not JNI bindings are used
#   e.g. MG, MG++ and GDBM and the like
# Setting this false means these components are not available to the install
# The expectation is that collections will be build from 100% Java components:
#   e.g Lucene and JDBM
# 
# Ant 1.7.1 and before only test for *existence* so this needs to be commented
# in or out to control whether jni is used or not
with.jni=true

## Controls whether or not we want GLI and GEMS to be checked out and compiled
with.gli.and.gems=true

## Control if compilation of gs2 is static or not. Used, for example, for distributions
# Same issue as 'with.jni' for how this gets used in ant 1.7.1 and before
#compile.static=true

## Uncomment this line to enable compilation with the gnome-lib extension
## The gnome-lib extension should be in the [gsdl3home]/ext directory
#use.support.lib=true

## windows c++ compilation
# The following property does not help in build.xml. 
# The user needs to run Visual Studio's vcvars32.bat script from the
# MSDOS prompt before compiling Greenstone3 (before "ant prepare install")
#compile.windows.c++.setup=C:/Program Files/Microsoft Visual Studio/VC98/Bin/VCVARS32.BAT

##Flax stuff##
##uncomment if you want to install flax
#install.flax=true
flax.checkout.path=${flax.svn.root}/trunk/flaxmain

##Web services related constants##
base.webservice.name=SOAPServer
##listing and description of all the web services deployable on GS3##
web.services.list=${base.webservice.name} for Greenstone3's core web services, QBR${base.webservice.name} for Query, Browse and Retrieve services
